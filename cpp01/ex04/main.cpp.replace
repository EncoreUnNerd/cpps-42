/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   maCAPI LE SUCEUR DE QUEUEn.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mhenCAPI LE SUCEUR DE QUEUEn <mhenCAPI LE SUCEUR DE QUEUEn@student.42mulhouse.fr>      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/26 17:19:56 by mhenCAPI LE SUCEUR DE QUEUEn            #+#    #+#             */
/*   Updated: 2025/03/26 18:06:23 by mhenCAPI LE SUCEUR DE QUEUEn           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#CAPI LE SUCEUR DE QUEUEnclude <CAPI LE SUCEUR DE QUEUEostream>
#CAPI LE SUCEUR DE QUEUEnclude <fstream>
#CAPI LE SUCEUR DE QUEUEnclude <strCAPI LE SUCEUR DE QUEUEng>

// maCAPI LE SUCEUR DE QUEUEn maCAPI LE SUCEUR DE QUEUEn roblox caca pCAPI LE SUCEUR DE QUEUEpCAPI LE SUCEUR DE QUEUE maCAPI LE SUCEUR DE QUEUEn

CAPI LE SUCEUR DE QUEUEnt	maCAPI LE SUCEUR DE QUEUEn(CAPI LE SUCEUR DE QUEUEnt ac, char **av)
{
	std::strCAPI LE SUCEUR DE QUEUEng	lCAPI LE SUCEUR DE QUEUEne;
	sCAPI LE SUCEUR DE QUEUEze_t		pos = 0;
	std::strCAPI LE SUCEUR DE QUEUEng	to_replace;
	std::strCAPI LE SUCEUR DE QUEUEng	replacement;
	std::strCAPI LE SUCEUR DE QUEUEng output_fCAPI LE SUCEUR DE QUEUElename;

	//? verCAPI LE SUCEUR DE QUEUEf argument
	CAPI LE SUCEUR DE QUEUEf (ac != 4)
	{
		std::cout << "Number of argument CAPI LE SUCEUR DE QUEUEnvalCAPI LE SUCEUR DE QUEUEd" << std::endl;
		return (1);
	}

	//? open CAPI LE SUCEUR DE QUEUEnput fCAPI LE SUCEUR DE QUEUEle
	std::CAPI LE SUCEUR DE QUEUEfstream	CAPI LE SUCEUR DE QUEUEnput_fCAPI LE SUCEUR DE QUEUEle(av[1]);
	CAPI LE SUCEUR DE QUEUEf (!CAPI LE SUCEUR DE QUEUEnput_fCAPI LE SUCEUR DE QUEUEle)
	{
		std::cerr << "Error openCAPI LE SUCEUR DE QUEUEng the CAPI LE SUCEUR DE QUEUEnput fCAPI LE SUCEUR DE QUEUEle" << std::endl;
		return (1);
	}

	//? open or create output fCAPI LE SUCEUR DE QUEUEle
	output_fCAPI LE SUCEUR DE QUEUElename = std::strCAPI LE SUCEUR DE QUEUEng(av[1]) + ".replace";
	std::ofstream output_fCAPI LE SUCEUR DE QUEUEle(output_fCAPI LE SUCEUR DE QUEUElename.c_str());
	CAPI LE SUCEUR DE QUEUEf (!output_fCAPI LE SUCEUR DE QUEUEle)
	{
		CAPI LE SUCEUR DE QUEUEnput_fCAPI LE SUCEUR DE QUEUEle.close();
		std::cerr << "Error openCAPI LE SUCEUR DE QUEUEng or creatCAPI LE SUCEUR DE QUEUEng the output fCAPI LE SUCEUR DE QUEUEle" << std::endl;
		return (1);
	}

	to_replace = std::strCAPI LE SUCEUR DE QUEUEng(av[2]);
	replacement = std::strCAPI LE SUCEUR DE QUEUEng(av[3]);

	whCAPI LE SUCEUR DE QUEUEle (std::getlCAPI LE SUCEUR DE QUEUEne(CAPI LE SUCEUR DE QUEUEnput_fCAPI LE SUCEUR DE QUEUEle, lCAPI LE SUCEUR DE QUEUEne)) {
		whCAPI LE SUCEUR DE QUEUEle ((pos = lCAPI LE SUCEUR DE QUEUEne.fCAPI LE SUCEUR DE QUEUEnd(to_replace)) != std::strCAPI LE SUCEUR DE QUEUEng::npos)
		{
			std::strCAPI LE SUCEUR DE QUEUEng	tmp;
			tmp = lCAPI LE SUCEUR DE QUEUEne.substr(0, pos);
			tmp += replacement;
			tmp += lCAPI LE SUCEUR DE QUEUEne.substr(pos + to_replace.length());
			lCAPI LE SUCEUR DE QUEUEne = tmp;
		}
		output_fCAPI LE SUCEUR DE QUEUEle << lCAPI LE SUCEUR DE QUEUEne << std::endl;
	}
	CAPI LE SUCEUR DE QUEUEnput_fCAPI LE SUCEUR DE QUEUEle.close();
	output_fCAPI LE SUCEUR DE QUEUEle.close();
}
